.. Copyright 2022-2024 The Ramble Authors

   Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
   https://www.apache.org/licenses/LICENSE-2.0> or the MIT license
   <LICENSE-MIT or https://opensource.org/licenses/MIT>, at your
   option. This file may not be copied, modified, or distributed
   except according to those terms.

.. _workspace:

================
Ramble Results
================

Ramble provides support and tooling around processing results data.

See ``ramble workspace analyze`` (and associated :doc:`workspace documentation<workspace>`) for generating such data.

Most notably, the two supported functionalities are:
  * Uploading of arbitrary JSON
  * Generation of plots and analysis as part of a report

-------------------
Upload
-------------------

The `ramble results upload` command is used to imports experiment results from
a JSON file, and uploads them as specified in the upload block of Ramble's
config file.

This can be used for both results from an arbitrary ramble workspace, or for
data that is generated by tools which conform to rambles data schema.

-------------------
Report
-------------------
The `ramble results report` command is experimental functionality that provides
the user a way to generate plots and reports from the output of a workspace.
This output is in the form of individual `png` plots, and a combined `pdf`
report

Multiple plot types are supported, to aid in comparison of runs and common tasks, including:
  * Scaling (line) plots (both strong and weak)
  * Comparison bar plots
  * General FOM bar plots

For these plots, common operations are supported such as log axis, data
grouping, and idealized line plotting.

While this functionality is very useful and powerful, it is not intended as a
wholesale replacement for uploading the data into more advanced offline
analysis tools.

^^^^^^^^^^^^^^^
Strong and Weak Scaling Plots
^^^^^^^^^^^^^^^

Activated by either the `strong-scaling` or `weak-scaling` subcommand, these plots generate a line plot and attempt to annotate idealized scaling based on the data input.

Both commands take two sub-arguments:
  * The performance metric: the FOM to plot on the y axis
  * The scaling metric: the variable to plot on the x axis

And example call may look something like:

.. code-block:: console

   ramble -d results report --strong-scaling 'simpleFoam Time' n_nodes -f ~/ramble-results.json

(a very similar command should also work for `--weak-scaling`

^^^^^^^^^^^^^^^^^^^
Comparison and FOM plots
^^^^^^^^^^^^^^^^^^^

A comparison plot compares a specific FOM across all valid experiments, and generates a bar plot with one bar per experiment. It can be invoked by:

.. code-block:: console

    ramble -d results report --compare "Total Elapsed Time" -f ~/ramble-results.json

A FOM plot gives the user a quick way to visualize all FOMS in a workspace as a bar chart, for general data discovery. It can be invoked by:

.. code-block:: console

    ramble -d results report --foms -f ~/ramble-results.json
